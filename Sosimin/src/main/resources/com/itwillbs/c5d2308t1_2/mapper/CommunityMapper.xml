<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "https://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.itwillbs.c5d2308t1_2.mapper.CommunityMapper">

	<!-- 게시글 등록 -->
	<insert id="insertCommunity">
		INSERT INTO Community
		VALUES(
			null
			, #{community_category}
			, #{community_writer}
			, #{community_subject}
			, #{community_content}
			, #{community_image1}
			, #{community_image2}
			, #{community_image3}
			, #{community_image4}
			, #{community_image5}
			, #{community_readcount}
			, now()
		)
	</insert>
	
	<!-- 페이징 처리를 위한 게시물 개수 조회 작업 -->
	<select id="selectCommunityListCount" resultType="int">
		SELECT COUNT(*)
		FROM Community
		<if test="!searchKeyword.equals('')">
			WHERE
			<choose>
				<when test="searchType.equals('subject')">
					community_subject LIKE '%${searchKeyword}%'
				</when>
				<when test="searchType.equals('content')">
					community_content LIKE '%${searchKeyword}%'
				</when>
				<when test="searchType.equals('writer')">
					community_writer LIKE #{searchKeyword}
				</when>
				<otherwise>
					1=1 
				</otherwise>
			</choose>
		</if>
	</select>
	
	<!-- 한 페이지에 표시할 게시글 목록 조회 작업 요청 -->
	<select id="selectCommunityList" resultType="community">
		SELECT *
		FROM Community
		<if test="!searchKeyword.equals('')">
			WHERE
			<choose>
				<when test="searchType.equals('subject')">
					community_subject LIKE '%${searchKeyword}%'
				</when>
				<when test="searchType.equals('content')">
					community_content LIKE '%${searchKeyword}%'
				</when>
				<when test="searchType.equals('writer')">
					community_writer LIKE #{searchKeyword}
				</when>
				<otherwise>
					1=1 
				</otherwise>
			</choose>
		</if>
		ORDER BY community_id DESC
		LIMIT #{page.startRow}, #{page.listLimit}
	</select>
	
	<!-- 게시글 조회 -->
	<select id="selectCommunity" resultType="map">
		SELECT *
		FROM Community com JOIN Member m
		ON com.community_writer = m.member_id
		WHERE community_id = #{community_id}
	</select>
	
	<!-- 게시글 조회수 증가 작업 -->
	<update id="updateReadcount">
		<selectKey keyProperty="community_readcount" resultType="int" order="AFTER">
			SELECT community_readcount
			FROM Community
			WHERE community_id = #{community_id}
		</selectKey>
		UPDATE Community
		SET community_readcount = community_readcount + 1
		WHERE community_id = #{community_id}
	</update>
	
	<!-- 게시글 삭제 작업 -->
	<delete id="deleteCommunity">
		DELETE FROM Community
		WHERE community_id = #{community_id}
	</delete>
	
	<!-- 게시글 수정 - 파일 삭제 작업 -->
	<update id="updateCommunityFile">
		UPDATE Community
		SET
			community_image1 = CASE WHEN community_image1 = #{community_image1} THEN '' ELSE community_image1 END,
			community_image1 = CASE WHEN community_image2 = #{community_image1} THEN '' ELSE community_image2 END,
			community_image1 = CASE WHEN community_image3 = #{community_image1} THEN '' ELSE community_image3 END,
			community_image1 = CASE WHEN community_image4 = #{community_image1} THEN '' ELSE community_image4 END,
			community_image1 = CASE WHEN community_image5 = #{community_image1} THEN '' ELSE community_image5 END
		WHERE community_id = #{community_id}
	</update>
	
	<!-- 게시글 수정 작업 -->
	<update id="updateCommunity">
		UPDATE Community
		SET
			community_category = #{community_category}
			, community_subject = #{community_subject}
			, community_content = #{community_content}
			<if test="!community_image1.equals('')">
				, community_image1 = #{community_image1}
			</if>
			<if test="!community_image2.equals('')">
				, community_image2 = #{community_image2}
			</if>
			<if test="!community_image3.equals('')">
				, community_image3 = #{community_image3}
			</if>
			<if test="!community_image4.equals('')">
				, community_image4 = #{community_image4}
			</if>
			<if test="!community_image5.equals('')">
				, community_image5 = #{community_image5}
			</if>
		WHERE community_id = #{community_id}
	</update>
	
	<!-- 댓글 등록 작업 -->
	<insert id="insertReplyCommunity">
		<selectKey keyProperty="reply_id" resultType="int" order="BEFORE">
			SELECT IFNULL(MAX(reply_id), 0)
			FROM CommunityReply
		</selectKey>
		INSERT INTO CommunityReply
		VALUES(
			null
			, #{community_id}			
			, #{reply_writer}			
			, #{reply_content}			
			, #{reply_id} + 1
			, 0
			, 0
			, now()			
		)
	</insert>
	
	<!-- 게시글 댓글 목록 조회 -->
	<select id="getReplyList" resultType="reply">
		SELECT *
		FROM CommunityReply
		WHERE 
			community_id = #{community_id}
		ORDER BY
				reply_re_ref DESC
				,reply_re_seq ASC
				<!-- 댓글 최신순, 대댓글 오름차순을 위한 희망 -->
<!-- 			reply_re_ref DESC, -->
<!-- 		    CASE  -->
<!-- 		        WHEN reply_re_seq = 0 THEN 0 -->
<!-- 		        ELSE 1 -->
<!-- 		    END,  -->
<!-- 		    reply_re_seq DESC; -->
	</select>
	
	<!-- 댓글 작성자 조회 -->
	<select id="selectReplyWriter" resultType="reply">
		SELECT reply_id, reply_writer
		FROM CommunityReply
		WHERE reply_id = #{reply_id}
	</select>
	
	<!-- 댓글 삭제 작업 -->
	<delete id="deleteReply">
		DELETE FROM CommunityReply
		WHERE reply_id = #{reply_id}
	</delete>
	
	<!-- 대댓글 작성 시 기존 대댓글 순서 조정 -->
	<update id="updateReplySeq">
		UPDATE CommunityReply
		SET
			reply_re_seq = reply_re_seq + 1
		WHERE
			community_id = #{community_id}
			AND	reply_re_ref = #{reply_re_ref}
			AND reply_re_seq > #{reply_re_seq} 
	</update>
<!-- 	<update id="updateReplySeq"> -->
<!-- 		UPDATE CommunityReply -->
<!-- 		SET -->
<!-- 			reply_re_seq = reply_re_seq + 1 -->
<!-- 		WHERE -->
<!-- 			community_id = #{community_id} -->
<!-- 			AND	reply_re_ref = #{reply_re_ref} -->
<!-- 			<choose> -->
<!-- 				<when test="reply_re_seq > 0"> -->
<!-- 					AND reply_re_seq >= #{reply_re_seq}  -->
<!-- 				</when> -->
<!-- 				<when test="reply_re_seq = 0"> -->
<!-- 					AND reply_re_seq > #{reply_re_seq}  -->
<!-- 				</when> -->
<!-- 			</choose> -->
<!-- 	</update> -->
	
	<!-- 대댓글 작성 작성 -->
	<insert id="insertReReply">
		INSERT INTO CommunityReply
		VALUES(
			null
			, #{community_id}
			, #{reply_writer}
			, #{reply_content}
			, #{reply_re_ref}
			, #{reply_re_lev} + 1
			, #{reply_re_seq} + 1
			, now()
		)
	</insert>
	
	<!-- 상세 개시글 좋아요 갯수 -->
	<select id="selectLikeCount" resultType="int">
		SELECT IFNULL(COUNT(*), 0) 
		FROM CommunityLike
		WHERE 
			community_like_status = 0
			AND community_num = #{community_id}
	</select>
	
	<!-- 상세 게시글 좋아요 판별 -->
	<select id="selectLike" resultType="map">
		SELECT *
		FROM CommunityLike
		WHERE
			member_id = #{member_id}
			AND community_like_status = #{community_like_status}
			AND community_num = #{community_num}
	</select>
	
	<!-- 좋아요 삭제 -->
	<delete id="deleteLike">
		DELETE FROM CommunityLike
		WHERE
			member_id = #{member_id}
			AND community_like_status = #{community_like_status}
			AND community_num = #{community_num}
	</delete>
	
	<!-- 좋아요 등록 -->
	<insert id="insertLike">
		INSERT INTO CommunityLike
		VALUES(
			null
			, #{member_id}
			, #{community_like_status}
			, #{community_num}
		)
	</insert>
	
	<!-- 회원의 좋아요 목록 -->
	<select id="selectLikeList">
		SELECT *
		FROM CommunityLike
		WHERE 
			member_id = #{sId}
			AND community_like_status = #{community_like_status}
	</select>
</mapper>











