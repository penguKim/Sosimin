<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "https://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.itwillbs.c5d2308t1_2.mapper.PaymentMapper">
	<!-- 토큰 아이디조회 -->
	<select id="selectAccessToken" resultType="map">
		SELECT *
		FROM Token
		WHERE member_id = #{member_id}
	</select>

	<!-- 엑세스 토큰 저장 - INSERT -->
	<insert id="insertAccessToken">
		INSERT INTO Token
		VALUES (
			null
			, #{member_id}
			, #{token.access_token} 
			, #{token.refresh_token} 
			, #{token.user_seq_no} 
			, null
		)
	</insert>

	<!-- 엑세스 토큰 업데이트 - UPDATE -->
	<update id="updateAccessToken">
		UPDATE Token
		SET 
			access_token = #{token.access_token}
			, refresh_token = #{token.refresh_token}
			, user_seq_no = #{token.user_seq_no}
		WHERE member_id = #{member_id}
	</update>
	
	<!-- 페이 아이디조회 -->
	<select id="selectPay" resultType="int">
		SELECT count(*)
		FROM Pay
		WHERE member_id = #{member_id}
	</select>
	
	<!-- 페이 가입(계좌등록) - INSERT -->
	<insert id="insertPay">
		INSERT INTO Pay
		VALUES (
			null
			, #{member_id}
			, #{user_name}
			, #{fintech_use_num}
			, #{bank_name}
			, #{account_num_masked}
			, 0
			, now()
			, 1
			, null
			, #{pay_password}
		)
	</insert>
	
	<!-- 페이 수정(계좌수정) - UPDATE -->
	<update id="updatePay">
		UPDATE Pay
		SET
			user_name = #{user_name}
			, fintech_use_num = #{fintech_use_num}
			, bank_name = #{bank_name}
			, account_num_masked = #{account_num_masked}
			, pay_password = #{pay_password}
		WHERE member_id = #{member_id}
	</update>
	
	<!-- 페이 가입 정보 조회 -->
	<select id="selectPayInfo" resultType="map">
		SELECT *
		FROM Pay
		WHERE member_id = #{member_id}
			AND pay_status = 1
	</select>
	
	<!-- 페이 내역 불러오기 -->
	<select id="selectPayHistory" resultType="map">
		SELECT *
		FROM PayHistory
		WHERE pay_id = #{pay_id}
		<if test="pay_history_type != null and !pay_history_type.equals('')">
			AND pay_history_type = #{pay_history_type}
		</if>
		<if test="start_date != null and !start_date.equals('') and end_date != null and !end_date.equals('')">
			AND DATE(pay_history_date) BETWEEN #{start_date} AND #{end_date}
		</if>
		ORDER BY pay_history_date DESC
		<if test="startRow != null and !startRow.equals('') and listLimit != null and !listLimit.equals('')">
			LIMIT #{startRow}, #{listLimit}
		</if>
	</select>
	
	<!-- 페이 내역 개수 세기(페이징) -->
	<select id="selectPayHistoryCount" resultType="int">
		SELECT COUNT(*)
		FROM PayHistory
		WHERE pay_id = #{pay_id}
		<if test="pay_history_type != null and !pay_history_type.equals('')">
			AND pay_history_type = #{pay_history_type}
		</if>
		<if test="start_date != null and !start_date.equals('') and end_date != null and !end_date.equals('')">
			AND DATE(pay_history_date) BETWEEN #{start_date} AND #{end_date}
		</if>
	</select>
	
	<!-- 페이 잔액 충전 -->
	<update id="updatePayBalance">
		UPDATE Pay
		SET 
		<choose>
			<when test="pay_history_type == 1">
				pay_balance = pay_balance + CAST(#{tran_amt} AS SIGNED)
			</when>
			<when test="pay_history_type == 2">
				pay_balance = pay_balance - CAST(#{tran_amt} AS SIGNED)
			</when>
			<otherwise>
				pay_balance = pay_balance
			</otherwise>
		</choose>
		WHERE fintech_use_num = #{fintech_use_num}	
	</update>
	
	<!-- 페이 이용 내역 -->
	<insert id="insertPayHistory">
		<selectKey keyProperty="pay_history_balance" resultType="INT" order="BEFORE">
			SELECT pay_balance
			FROM Pay
			WHERE pay_id = #{pay_id}
		</selectKey>
		INSERT INTO PayHistory
		VALUE (
			null
			, #{pay_id}
			, #{tran_amt}
			<choose>
				<when test="pay_history_type == 1">
					, #{pay_history_balance} + CAST(#{tran_amt} AS SIGNED)
				</when>
				<when test="pay_history_type == 2">
					, #{pay_history_balance} - CAST(#{tran_amt} AS SIGNED)
				</when>
				<otherwise>
					, #{pay_history_balance}
				</otherwise>
			</choose>
			, #{pay_history_type}
			, null -- 상품관련아님
			, now()
			, 1 -- 완료
			, null
			, #{bank_tran_id}
		)
	</insert>
	
	<!-- 출금을 위해 관리자 토큰 조회(oob) -->
	<select id="selectAdminAccessToken" resultType="string">
		SELECT access_token
		FROM Token
		WHERE member_id = 'admin'
	</select>
	
	<!-- 거래고유번호 중복 확인 -->
	<select id="selectTranId" resultType="int">
		SELECT count(*)
		FROM PayHistory
		WHERE bank_tran_id = #{bank_tran_id}
	</select>
	
	
	
	
	<!-- ================ 관리자페이지 ====================== -->	
	
	<!-- 페이 관리 페이지 -->
	<select id="selectPayListAll" resultType="map">
		SELECT *
		FROM Pay
	</select>
	
	<!-- 페이 관리 상세 페이지 -->
	<select id="selectPayList" resultType="map">
		SELECT *
		FROM Pay
		WHERE pay_id = #{pay_id}
	</select>
	
	<!-- 충전/환급 페이지 -->
	<select id="selectPayChargeRefund" resultType="map">
		SELECT *
		FROM PayHistory JOIN Pay
		ON PayHistory.pay_id = Pay.pay_id
		WHERE pay_history_type = 1
			OR pay_history_type = 2
	</select>
	
	<!-- 사용/수익 페이지 -->
	<select id="selectPaySpentRevenue" resultType="map">
		SELECT *
		FROM PayHistory JOIN Pay
		ON PayHistory.pay_id = Pay.pay_id
		WHERE pay_history_type = 3
			OR pay_history_type = 4
	</select>
	
</mapper>